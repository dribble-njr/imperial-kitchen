name: PR Server Deploy

on:
  pull_request:
    types: [opened, synchronize, reopened]
    paths:
      - apps/server/**
      - apps/mobile/**

jobs:
  server-deploy:
    runs-on: ubuntu-latest

    environment: ${{ github.ref == 'refs/heads/master' && 'production' || 'development' }}

    steps:
      - uses: actions/checkout@v4

      - name: Setup SSH
        uses: webfactory/ssh-agent@v0.9.0
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

      - name: Deploy to Server
        run: |
          PR_NUMBER=${{ github.event.pull_request.number }}

          # Calculate the next available port (by checking if the port is in use)
          PORT=8000
          while ssh -o StrictHostKeyChecking=no $DEPLOY_USER@$DEPLOY_HOST "netstat -tuln | grep :$PORT"; do
            PORT=$((PORT + 1))
          done

          ssh -o StrictHostKeyChecking=no $DEPLOY_USER@$DEPLOY_HOST <<EOF
          rm -rf $DEPLOY_DIR/pr-$PR_NUMBER
          mkdir -p $DEPLOY_DIR/pr-$PR_NUMBER
          cd $DEPLOY_DIR/pr-$PR_NUMBER

          # Clone the latest code
          git clone -b ${{ github.event.pull_request.head.ref }} https://github.com/${{ github.repository }}.git .

          cd apps/server
          cat > .env <<EOL
          DB_URL=${{ secrets.DB_URL }}
          nodemailer_host=smtp.163.com
          nodemailer_auth_user=wzw15292257101@163.com
          nodemailer_auth_pass=${{ secrets.NODEMAILER_AUTH_PASS }}
          jwt_secret=agshddgfsd
          REDIS_PASSWORD=${{ secrets.REDIS_PASSWORD }}
          REDIS_URL=redis-13502.c261.us-east-1-4.ec2.redns.redis-cloud.com
          EOL

          cd ../..

          # Start container with dynamic port
          docker compose down
          SERVER_PORT=$PORT NODE_ENV=dev docker compose -f docker-compose.yml -f docker-compose.dev.yml up -d --build
          EOF
        env:
          DEPLOY_DIR: ${{ secrets.DEPLOY_DIR }}
          DEPLOY_USER: ${{ secrets.DEPLOY_USER }}
          DEPLOY_HOST: ${{ secrets.DEPLOY_HOST }}
