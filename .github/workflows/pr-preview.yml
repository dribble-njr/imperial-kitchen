name: PR Preview

on:
  pull_request:
    types: [opened, synchronize, reopened]
    paths:
      - apps/mobile/**
      - apps/server/**

jobs:
  server-deploy:
    runs-on: ubuntu-latest

    environment: ${{ github.ref == 'refs/heads/master' && 'production' || 'development' }}

    steps:
      - uses: actions/checkout@v4

      - name: Setup SSH
        uses: webfactory/ssh-agent@v0.9.0
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

      - name: Deploy to Server
        run: |
          PR_NUMBER=${{ github.event.pull_request.number }}
          PORT=$((8000 + PR_NUMBER))
          ssh -o StrictHostKeyChecking=no $DEPLOY_USER@$DEPLOY_HOST <<EOF
          mkdir -p $DEPLOY_DIR/pr-$PR_NUMBER
          cd $DEPLOY_DIR/pr-$PR_NUMBER

          # Clone or pull the latest code
          if [ ! -d .git ]; then
            git clone -b ${{ github.event.pull_request.head.ref }} https://github.com/${{ github.repository }}.git .
          else
            git pull origin ${{ github.event.pull_request.head.ref }}
          fi

          cd apps/server
          cat > .env <<EOL
          PORT=$PORT
          DB_URL=${{ secrets.DB_URL }}
          nodemailer_host=smtp.163.com
          nodemailer_auth_user=wzw15292257101@163.com
          nodemailer_auth_pass=${{ secrets.NODEMAILER_AUTH_PASS }}
          jwt_secret=agshddgfsd
          REDIS_PASSWORD=${{ secrets.REDIS_PASSWORD }}
          REDIS_URL=redis-13502.c261.us-east-1-4.ec2.redns.redis-cloud.com
          EOL

          # Start container with dynamic port
          docker compose down
          SERVER_PORT=$PORT NODE_ENV=dev MYSQL_DATA_DIR=dev_mysql_data docker compose up -d --build --name server-pr-$PR_NUMBER
          EOF
        env:
          DEPLOY_DIR: ${{ secrets.DEPLOY_DIR }}
          DEPLOY_USER: ${{ secrets.DEPLOY_USER }}
          DEPLOY_HOST: ${{ secrets.DEPLOY_HOST }}

  # https://github.com/expo/expo-github-action/tree/main/preview#create-previews-on-pull-requests
  eas-preview:
    runs-on: ubuntu-latest

    permissions:
      pull-requests: write

    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-node@v4
        with:
          node-version: 20.10.0
          cache: yarn

      - name: Setup Expo and EAS
        uses: expo/expo-github-action@v8
        with:
          eas-version: latest
          token: ${{ secrets.EXPO_TOKEN }}

      - name: Install dependencies
        run: yarn install

      - name: Trigger EAS Preview
        uses: expo/expo-github-action/preview@v8
        id: preview
        with:
          working-directory: ./apps/mobile
          command: eas update --auto --branch ${{ github.event.pull_request.head.ref }}
